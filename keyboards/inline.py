"""
Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–æ—Ç–∞
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Dict
from utils.translator import t, get_available_languages


def get_messages_keyboard(messages: List[Dict], lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø–∏—Å–µ–º"""
    keyboard = []
    
    for message in messages:
        message_id = message.get("id", "")
        subject = message.get("subject", "–ë–µ–∑ —Ç–µ–º—ã")
        sender = message.get("from", {}).get("address", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å")
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∫–Ω–æ–ø–∫–µ
        button_text = f"üìß {subject[:30]}..." if len(subject) > 30 else f"üìß {subject}"
        
        keyboard.append([
            InlineKeyboardButton(
                text=button_text,
                callback_data=f"view_message:{message_id}"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
    keyboard.append([
        InlineKeyboardButton(
            text=t("refresh", lang),
            callback_data="refresh_inbox"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_message_actions_keyboard(message_id: str, lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º"""
    keyboard = [
        [
            InlineKeyboardButton(
                text=t("back_to_inbox", lang),
                callback_data="back_to_inbox"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_email_management_keyboard(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—á—Ç–æ–π"""
    keyboard = [
        [
            InlineKeyboardButton(
                text="üìß " + t("btn_get_mail", lang),
                callback_data="create_email"
            )
        ],
        [
            InlineKeyboardButton(
                text="üì¨ " + t("btn_view_mails", lang),
                callback_data="check_messages"
            )
        ],
        [
            InlineKeyboardButton(
                text="üóëÔ∏è " + t("btn_delete", lang),
                callback_data="delete_email"
            )
        ]
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_language_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞"""
    available_languages = get_available_languages()
    keyboard = []
    
    for lang_code, lang_name in available_languages.items():
        keyboard.append([
            InlineKeyboardButton(
                text=lang_name,
                callback_data=f"set_language:{lang_code}"
            )
        ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
